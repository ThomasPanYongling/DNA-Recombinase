# -*- coding: utf-8 -*-
"""
Created on Mon Jun  2 12:05:07 2025

@author: Thomas
"""
'''
step1: build the operations
step2: decide the order
step3: build the initial sequence  
'''


initial_dna_sequence = "GCACGGGTTCACCGCGGGCTCCGTTCTGAGTCGACCAAGGACACAATCGAGCTCCGATCCGTACCCTCGACAAACTTGTACCCGACCCCCGGAGCTTGCCAGCTCCTCGGGTATCATGGAGCCTGTGGTTCATCGCGTCCGATATCAAACTTCGTCATGATAAAGTCCCCCCCTCGGGAGTACCAGAGAAGATGACTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCCGAGTCTCACGTCTGACCTCGCGGGTAGATTGCCATGCGTAGAGCTTACGAGCCAGCGGAAAGTGTGAGGCGCTTTTAAGTATGGCGAGTAAGTGATCCAACGCTTCGGATGTGACTATATACTTAGGTTCGATCTCGTCCCGAGAATTTTAAGCCTCAGCATCTACGAGTTATGAGGTTAGCCAAAAAAGCACGTGGTGGCGCCCACCGACTGTTCCCAAACTGTAGCTCTTCGTTCCGTCAAGGCCCGACTTTCATCGCGGCCCATTCCATGCGCGGACCATACCGTCCTAATTCTTCGGTTATGTTTCCGATGTAGGAGTGAGCCTACCTGCCTTTGCGTCTTGATACCAATGAAAAACCTATGCACTTTGTACAGGGTGCCATCGGGTTTCTGAACTCTCAGATAGTGGGGATCCCGGGTAAAGACCTATATCTGCGGTCCAACTTAGGCATAAACCTCCATGCTACCTAGTCAGACCCACCCCGCACGGGGTAAATATGGCACGCGTCCGACCTGGTTCCTGGCGTTCTACGCTGCCACGTGTTCATTAACTGTTGTTTGGTAGCACAAAAGTATTACCATGGTCCTAGAAGTTCGGCACAGTTAGTTCGAGCCTAATGTCACAAATGACGCAGAACGCCAATGAGTGCCAGACATTAGGTGGAGTTCAGTTCGGTAACGGAGAGACTCTGCGGCGTACTTAATTATGCATTTGAAACGCGCCCAAGTGACGCTAGGCAAGTCAG"
pairing={'A':'T','T':'A','C':'G','G':'C'}

string='ATCG'
def prime(string):
    inverse_string=string[::-1]
    inverse_composite=[]
    for char in inverse_string:
        inverse_composite+=pairing.get(char)    
    return inverse_composite


#B,C,D=split_string_into_three(initial_dna_sequence,'CGGG','GGGC')

#simple case, only one operation possible
def activate_colour(string,colour):
    
    return string.split(colour,1)
    
    
    
    